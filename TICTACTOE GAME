#include <iostream>
using namespace std;

//character array 3x3 matrix for game and assigning the value
char space[3][3]={{'1','2','3'},{'4','5','6',},{'7','8','9'}};
char token = 'x';
int row,column;
bool tie=false;
string p1 = " ";
string p2= " ";


void board1()
{
    //game structure tioo display
   cout<<"   |    |   \n";
   cout<<" "<<space[0][0]<<" | "<<space[0][1]<<"  | "<<space[0][2]<<endl;
   cout<<"___|____|____\n";
   cout<<"   |    |   \n";
   cout<<" "<<space[1][0]<<" | "<<space[1][1]<<"  | "<<space[1][2]<<endl;
   cout<<"___|____|____\n";
   cout<<"   |    |   \n";
   cout<<" "<<space[2][0]<<" | "<<space[2][1]<<"  | "<<space[2][2]<<endl;
   cout<<"   |    |   \n";

}

void board2(){

    int digit;

    if(token=='x'){
        cout<<p1<<"  please Enter :) ";
        cin>>digit; 
    }

     if(token=='0'){
        cout<<p2<<"  please Enter :) ";
        cin>>digit; 
    }

     if(digit==1)
    {
        row=0;
        column=0;
    }

    else if(digit==2)
    {
        row=0;
        column=1;
    }

    else if(digit==3)
    {
        row=0;
        column=2;
    }

    else if(digit==4)
    {
        row=1;
        column=0;
    }

    else if(digit==5)
    {
        row=1;
        column=1;
    }

    else if(digit==6)
    {
        row=1;
        column=2;
    }

    else if(digit==7)
    {
        row=2;
        column=0;
    }

    else if(digit==8)
    {
        row=2;
        column=1;
    }

    else if(digit==9)
    {
        row=2;
        column=2;
    }

    else
    {
       cout<<"invalid input!!"<<endl;
       board2();
       return;
    }

     //if the space is not filled with x or 0 then filled the space with x
    if(space[row][column]!='x' && space[row][column]!='0')
    {
        space[row][column] = token;
        token = (token == 'x')? '0' : 'x';
    }
    else 
    {
        cout<<"no empty space try again "<<endl;
        board2();
    }
    board1();

}

bool  board3()
{
    for(int i=0; i<3; i++)
    {
        //if (oo,o1,o2 )are match it can match vertically,horizontally or diagonally so that's why we use this statement
        if(space[i][0]==space[i][1] && space[i][0]==space[i][2] || space[0][i]==space[1][i] && space[1][i]==space[2][i])
        return true;  //and if pair is there it will return true
    }
    if(space[0][0]==space[1][1] && space[1][1]==space[2][2] || space[0][2]==space[1][1] && space[1][1]==space[2][0])
    {
       return true;
    }

    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            if(space[i][j]!='x' && space[i][j]!='0')
            {
                return false;
            }
        }
    }
    tie=true;
    return false;
}

void playAgain()
{
    cout<<" ";
    char choice;
    cin>>choice;

    if(choice == 'y' || choice == 'n')
    {
        for(int i=0; i<3; i++)
        {
            for(int j=0; j<3; j++)
            {
                space[i][j]='1' + i + 3 + j;
            }
        }
        token = 'x';
        tie = false;
        int main();

    } else{
        cout<<"thanks for playing goodbye."<<endl;
        exit(0);
    }
}

int main()
{
    
   cout<<"enter the name of player 1\n ";
   getline(cin, p1);

   cout<<"enter the name of second player 2\n  ";
   getline(cin, p2);

   cout<<p1<<"  ill play first ! \t\n";
   cout<<p2<<"  will play second !\t";

  do{
    while (!board3())
    {
        board1();
        board2();
        board3();

    }
    if(token == 'x' && ! tie)
    {
        cout<<p2<<"WINS !! "<<endl;

    }
    else if(token == '0' && !tie)
    {
        cout<<p1<<"WINS !! "<<endl;

    }
    else
    {
        cout<<"IT'S DRAW !!"<<endl;
    }

    playAgain();

  }while(true);

   return 0;
}
